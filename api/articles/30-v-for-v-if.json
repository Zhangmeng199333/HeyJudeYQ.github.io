{"title":"30、v-for 和 v-if 优先级","uid":"411f39ec2fc2f918d06983313497452a","slug":"30-v-for-v-if","date":"2021-03-15T16:00:00.000Z","updated":"2022-09-05T07:44:24.000Z","comments":true,"path":"api/articles/30-v-for-v-if.json","keywords":null,"cover":null,"content":"<p>v-for 和 v-if 优先级在vue2.x和vue3.x是相反的。</p>\n<span id=\"more\"></span>\n\n<p>1、实践中，不应该将v-for和v-if放在一起</p>\n<p>2、Vue2中，v-for的优先级是高于v-if，把他们放在一起，输出的渲染函数中可以看出会先执行循环再判断条件，哪怕我们只渲染列表中一小部分元素，也得在每次重渲染的时候遍历整个列表，这样会比较浪费性能；而在Vue3中则跟Vue2完全相反，v-if的优先级是高于v-for的，所以v-if执行时，它调用的变量哈不存在，会导致异常。</p>\n<p>3、2种场景的应用：<br>（1）为了过滤列表肿的项目（v-for&#x3D;”user in users” v-if&#x3D;”user.isActive”   ）。这种情况，我们可以使用计算属性，定义一个activeUsers，让其返回过滤后的列表即可（“users.filter(u &#x3D;&gt; u.isActive)”）<br>  (2)为了避免渲染本应该被隐藏的列表（v-for&#x3D;”user in users” v-if&#x3D;”shouldShowUsers”）。此时v-if移动到容器元素上（比如ul ol）或者外面包一层template即可</p>\n<p>4、Vue文档明确指出v-if和v-for不要同事用在同一个元素上。</p>\n","text":"v-for 和 v-if 优先级在vue2.x和vue3.x是相反的。 1、实践中，不应该将v-for和v-if放在一起 2、Vue2中，v-for的优先级是高...","permalink":"/post/30-v-for-v-if","photos":[],"count_time":{"symbolsCount":548,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"vue","slug":"vue","count":17,"path":"api/tags/vue.json"}],"toc":"","author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"31、解决点击手机虚拟返回键退出应用","uid":"f18cc13b06f49583aa6612c15444224c","slug":"31-back","date":"2021-03-23T12:00:00.000Z","updated":"2022-09-05T07:44:37.000Z","comments":true,"path":"api/articles/31-back.json","keywords":null,"cover":null,"text":"如何解决安卓手机点击虚拟返回键退出当前应用。 一、问题描述： 最近的项目是使用Vue全家桶+HBuilder打包开发一个移动端APP。在测试的时候发现，当安卓手...","permalink":"/post/31-back","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"dev","slug":"dev","count":15,"path":"api/tags/dev.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"29、Vue-虚拟DOM","uid":"8b7a4cba80a4355d072b07b5971d183d","slug":"29-vdom","date":"2021-03-11T16:00:00.000Z","updated":"2022-09-05T07:44:10.000Z","comments":true,"path":"api/articles/29-vdom.json","keywords":null,"cover":null,"text":" 虚拟DOM其实就是一棵模拟JavaScript对象作为基础的树，用对象属性来描述节点，实际上它只是一层对真实DOM的抽象。最终可以通过一系列操作使这棵树映射到...","permalink":"/post/29-vdom","photos":[],"count_time":{"symbolsCount":88,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"vue","slug":"vue","count":17,"path":"api/tags/vue.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}