{"title":"57、Vue2/Vue3 响应式原理","uid":"aa40af85aceeb30cb2d7f6d5d06d90ef","slug":"57-vue2-defineProperty","date":"2022-02-23T16:00:00.000Z","updated":"2022-09-05T07:57:24.000Z","comments":true,"path":"api/articles/57-vue2-defineProperty.json","keywords":null,"cover":null,"content":"<p>Vue官网：当把一个普通的对象传入Vue实例作为data选项，Vue将遍历此对象所有的属性，并使用Object.defineProperty把这些数星星全部转化为getter&#x2F;setter。Object.defineProperty是ES5中一个无法shim的特性（查了一下shim的意思：就是可以将新的API引入到旧的环境中，而且仅靠环境中的已有手段实现，Obejct.defineProperty无法在低级浏览器中的方法实现），这也就是Vue不支持IE8以及更低版本浏览器的原因。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"一、Vue无法检测对象属性添加或删除\"><a href=\"#一、Vue无法检测对象属性添加或删除\" class=\"headerlink\" title=\"一、Vue无法检测对象属性添加或删除\"></a>一、Vue无法检测对象属性添加或删除</h2><p>Object.defineProperty 没有对对象的新属性进⾏属性劫持 </p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>原因：由于Vue会在初始化实例时对对象的属性执行getter&#x2F;setter转化，所以属性必须在data对象上存在才能让Vue将它转换为响应式的。</p></blockquote>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> vm </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Vue</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">data</span><span style=\"color: #89DDFF\">:&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #F07178\">a</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">vm</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">a 是响应式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">vm</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">b 是非响应式</span></span></code></pre></div><p>解决无法检测对象属性的增加、删除的方法：Vue.set(object,propertyName,value)(增加属性)、Vue.delete()（删除属性）</p>\n<h2 id=\"二、Vue不能检测数组的变动\"><a href=\"#二、Vue不能检测数组的变动\" class=\"headerlink\" title=\"二、Vue不能检测数组的变动\"></a>二、Vue不能检测数组的变动</h2><p>数组是一个特殊的JavaScript对象，Vue没有对数组进⾏ Object.defineProperty 的属性劫持，所以会存在的问题：</p>\n<p>不能检测数组变动的2类问题：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1、当你利用索引直接设置一个数组项时，例如：vm.items[indexOfItem] &#x3D; newValue<br>2、当你修改数组的长度时，例如：vm.items.length &#x3D; newLength</p></blockquote>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> vm </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Vue</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #F07178\">data</span><span style=\"color: #89DDFF\">:&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #F07178\">items</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> [</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">a</span><span style=\"color: #89DDFF\">&#39;&#39;</span><span style=\"color: #C3E88D\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">b</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">,</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">c</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">vvm</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">items[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">x</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 非响应式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">vm</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">items</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 非响应式</span></span></code></pre></div><p>解决利用索引值设置一个数组项的方法：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>vm.$set(vm.items, indexOfItem, newValue)</p></blockquote>\n<p>解决第2个问题：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>vm.items.splice(newLength)  &#x2F;&#x2F; Array.prototype.slice</p></blockquote>\n<h2 id=\"三、Vue2-为什么不劫持数组？\"><a href=\"#三、Vue2-为什么不劫持数组？\" class=\"headerlink\" title=\"三、Vue2 为什么不劫持数组？\"></a>三、Vue2 为什么不劫持数组？</h2><p>Vue2使用的Object.defineProperty无法监控到数组下标的变化，导致通过数组下标添加元素，不能实时响应； Object.defineProperty是可以监听数组下标变化的，对于javascript来讲，数组也是属于Object。</p>\n<p>尤雨溪说过：为了性能！！！</p>\n<p>原因：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1、因为数组的位置不固定，数量多变，正常对象key对应value一般不会变，但是如果数组删除了某个元素。比如第一个元素被删除或者头部增加一个元素，那么将导致后面所有的key对应value错位，如果6个元素，也就会触发5次set。<br>2、数组元素可能非常非常多，每个元素进行劫持有一定浪费，这可能是Evan you对性能的考虑。<br>3、Vue将数组的7个变异方法进行了重写，也就是更改了Array原型上的方法达到劫持变化。</p></blockquote>\n<p>Vue3 的 proxy<br>Object.defineProperty只能劫持对象的属性，从而需要对每个对象，每个属性进行遍历，如果，属性值是对象，还需要深度遍历。</p>\n<p>Proxy可以劫持整个对象，并返回一个新的对象。</p>\n<p>所以为什么proxy优于Object.defineProperty？</p>\n<p>Object.defineProperty必须“预先”劫持属性。被劫持的属性才会被监听到。所以后添加的属性，需要手动再次劫持。</p>\n<p>而proxy代理了整个对象，不需要预先劫持属性，而是在获取&#x2F;修改的时候，通过get&#x2F;set方法来告诉你key。所以不管如何新增属性，总是能被捕获到。</p>\n<h2 id=\"四、Vue响应式原理\"><a href=\"#四、Vue响应式原理\" class=\"headerlink\" title=\"四、Vue响应式原理\"></a>四、Vue响应式原理</h2><p>整体思路是数据劫持+观察者模式：</p>\n<p>对象内部通过 defineReactive ⽅法，使⽤ Object.defineProperty 将属性进⾏劫持（只会劫持已经存在的属性），数组则是通过重写数组⽅法来实现。当⻚⾯使⽤对应属性时，每个属性都拥有⾃⼰的 dep 属性，存放他所依赖的 watcher （依赖收集），当属性变化后会通知⾃⼰对应的 watcher 去更新(派发更新)。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Vue响应式原理的核心：就是Observer、Dep、Watcher。Observer中进行响应式的绑定，在数据被读的时候，触发get方法，执行Dep来收集依赖，也就是收集Watcher。在数据被改的时候，触发set方法，通过对应的所有依赖(Watcher)，去执行更新。比如watch和computed就执行开发者自定义的回调方法。</p></blockquote>\n<h2 id=\"五、为什么只对对象劫持，对数组方法进行重写？\"><a href=\"#五、为什么只对对象劫持，对数组方法进行重写？\" class=\"headerlink\" title=\"五、为什么只对对象劫持，对数组方法进行重写？\"></a>五、为什么只对对象劫持，对数组方法进行重写？</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>因为对象最多也就⼏⼗个属性，拦截起来数量不多，但是数组可能会有⼏百⼏千项，拦截起来⾮常耗性能，所以直接重写数组原型上的⽅法，是⽐较节省性能的⽅案</p></blockquote>\n<h2 id=\"六、实现一个数据双向绑定\"><a href=\"#六、实现一个数据双向绑定\" class=\"headerlink\" title=\"六、实现一个数据双向绑定\"></a>六、实现一个数据双向绑定</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">input</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">id</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hangdleInput</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">type</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">text</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">id</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hangdleValue</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;&lt;/</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        let obj =</span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        let input = document.getElementById(&#39;hangdleInput&#39;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        let span = document.getElementById(&#39;hangdleValue&#39;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Object.defineProperty(obj,&#39;text&#39;,</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            configurable: </span><span style=\"color: #FF9CAC\">true</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            enumerable: </span><span style=\"color: #FF9CAC\">true</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #82AAFF\">get</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                console.log(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">get data</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            set(newVal)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                console.log(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">set data</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                input.value = newVal</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">                span.innerHTML = newVal</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        input.addEventListener(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">keyup</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\">function</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #BABED8\">obj</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">text</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">target</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">value</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &lt;/script&gt;</span></span></code></pre></div><h2 id=\"七、Vue3-Proxy\"><a href=\"#七、Vue3-Proxy\" class=\"headerlink\" title=\"七、Vue3 Proxy\"></a>七、Vue3 Proxy</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Vue2 的响应式是基于 Object.defineProperty 实现的<br>Vue3 的响应式是基于 ES6 的 Proxy 来实现的</p></blockquote>\n<p>在Vue2.0中，数据双向绑定就是通过Object.defineProperty去监听对象的每一个属性，然后在get&#x2F;set方法中通过发布订阅者模式来实现的数据响应，但是存在一定的缺陷，比如只能监听已存在的属性，对于新增删除属性就无能为力了，同时无法监听数组的变化，所以在Vue3.0中将其换成了功能更强大的ES6 Proxy。</p>\n<p>Vue2的响应式函数:</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 响应式函数</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">reactive</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">obj</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">value</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #BABED8\">Object</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">defineProperty</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    get</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">访问了</span><span style=\"color: #89DDFF\">$&#123;</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #C3E88D\">属性</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">value</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    set</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">val</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">将</span><span style=\"color: #89DDFF\">$&#123;</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #C3E88D\">由-&gt;</span><span style=\"color: #89DDFF\">$&#123;</span><span style=\"color: #BABED8\">value</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #C3E88D\">-&gt;设置成-&gt;</span><span style=\"color: #89DDFF\">$&#123;</span><span style=\"color: #BABED8\">val</span><span style=\"color: #89DDFF\">&#125;`</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> (</span><span style=\"color: #BABED8\">value</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">!==</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">val</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #BABED8\">value</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">val</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> data </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">jude</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">age</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">18</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Object</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">keys</span><span style=\"color: #BABED8\">(data)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #BABED8\">(</span><span style=\"color: #BABED8; font-style: italic\">key</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">reactive</span><span style=\"color: #BABED8\">(data</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> data[key]))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(data</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 访问了name属性</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// jude</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">summer</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 将name由-&gt;jude-&gt;设置成-&gt;summer</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(data</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 访问了name属性</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// summer</span></span></code></pre></div><p>Vue3的响应式函数：</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> data </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">jude</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">age</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">18</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">reactive</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">target</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">handler</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    get</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">target</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8; font-style: italic\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8; font-style: italic\">receiver</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">访问了</span><span style=\"color: #89DDFF\">$&#123;</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #C3E88D\">属性</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Reflect</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">target</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">receiver</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    set</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">target</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8; font-style: italic\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8; font-style: italic\">value</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8; font-style: italic\">receiver</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">将</span><span style=\"color: #89DDFF\">$&#123;</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #C3E88D\">由-&gt;</span><span style=\"color: #89DDFF\">$&#123;</span><span style=\"color: #BABED8\">target[key]</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #C3E88D\">-&gt;设置成-&gt;</span><span style=\"color: #89DDFF\">$&#123;</span><span style=\"color: #BABED8\">value</span><span style=\"color: #89DDFF\">&#125;`</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #BABED8\">Reflect</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">set</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">target</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">value</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">receiver</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">Proxy</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">target</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">handler</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> proxyData </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">reactive</span><span style=\"color: #BABED8\">(data)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(proxyData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 访问了name属性</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// jude</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">proxyData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">summer</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 将name由-&gt;jude-&gt;设置成-&gt;summer</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(proxyData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 访问了name属性</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// summer</span></span></code></pre></div><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">* target: 要兼容的对象，可以是一个对象，数组,函数等等</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">* handler: 是一个对象，里面包含了可以监听这个对象的行为函数，比如上面例子里面的get与set</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">* 同时会返回一个新的对象proxy, 为了能够触发handler里面的函数，必须要使用返回值去进行其他操作，比如修改值</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> proxy </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Proxy</span><span style=\"color: #BABED8\">(target</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> handler)</span></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"1、handle-get、handle-set、handle-has、handler-deleteProperty\"><a href=\"#1、handle-get、handle-set、handle-has、handler-deleteProperty\" class=\"headerlink\" title=\"1、handle.get、handle.set、handle.has、handler.deleteProperty\"></a>1、handle.get、handle.set、handle.has、handler.deleteProperty</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>当通过proxy去读取对象里面的属性的时候，会进入到get钩子函数里面<br>当通过proxy去为对象设置修改属性的时候，会进入到set钩子函数里面<br>当使用in判断属性是否在proxy代理对象里面时，会触发has<br>当使用delete去删除对象里面的属性的时候，会进入deleteProperty钩子函数</p></blockquote>\n<h3 id=\"2、Reflect\"><a href=\"#2、Reflect\" class=\"headerlink\" title=\"2、Reflect\"></a>2、Reflect</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在上面，我们获取属性的值或者修改属性的值都是通过直接操作target来实现的，但实际上ES6已经为我们提供了在Proxy内部调用对象的默认行为的API: Reflect。</p></blockquote>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> obj </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> proxy </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Proxy</span><span style=\"color: #BABED8\">(obj</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #F07178\">get</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">target</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8; font-style: italic\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8; font-style: italic\">receiver</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">Reflect</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">target</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">receiver</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span></code></pre></div>","text":"Vue官网：当把一个普通的对象传入Vue实例作为data选项，Vue将遍历此对象所有的属性，并使用Object.defineProperty把这些数星星全部转化...","permalink":"/post/57-vue2-defineProperty","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"vue","slug":"vue","count":17,"path":"api/tags/vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Vue%E6%97%A0%E6%B3%95%E6%A3%80%E6%B5%8B%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">一、Vue无法检测对象属性添加或删除</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81Vue%E4%B8%8D%E8%83%BD%E6%A3%80%E6%B5%8B%E6%95%B0%E7%BB%84%E7%9A%84%E5%8F%98%E5%8A%A8\"><span class=\"toc-text\">二、Vue不能检测数组的变动</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81Vue2-%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%8A%AB%E6%8C%81%E6%95%B0%E7%BB%84%EF%BC%9F\"><span class=\"toc-text\">三、Vue2 为什么不劫持数组？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81Vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">四、Vue响应式原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AA%E5%AF%B9%E5%AF%B9%E8%B1%A1%E5%8A%AB%E6%8C%81%EF%BC%8C%E5%AF%B9%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%E8%BF%9B%E8%A1%8C%E9%87%8D%E5%86%99%EF%BC%9F\"><span class=\"toc-text\">五、为什么只对对象劫持，对数组方法进行重写？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A\"><span class=\"toc-text\">六、实现一个数据双向绑定</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81Vue3-Proxy\"><span class=\"toc-text\">七、Vue3 Proxy</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81handle-get%E3%80%81handle-set%E3%80%81handle-has%E3%80%81handler-deleteProperty\"><span class=\"toc-text\">1、handle.get、handle.set、handle.has、handler.deleteProperty</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81Reflect\"><span class=\"toc-text\">2、Reflect</span></a></li></ol></li></ol>","author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"58、解决Homebrew安装失败","uid":"17a317899ff4b14db2de98aeac8d5e18","slug":"58-homebrew","date":"2022-02-24T16:00:00.000Z","updated":"2022-09-05T07:57:40.000Z","comments":true,"path":"api/articles/58-homebrew.json","keywords":null,"cover":null,"text":"Homebrew是一款Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。 一、安装官网安装方式： js/usr/bin/ru...","permalink":"/post/58-homebrew","photos":[],"count_time":{"symbolsCount":372,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"tool","slug":"tool","count":4,"path":"api/tags/tool.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"56、HTTP的请求方法、状态码","uid":"6078e843a70df5973b73339f903e8c92","slug":"56-http","date":"2022-02-22T16:00:00.000Z","updated":"2022-09-05T07:56:57.000Z","comments":true,"path":"api/articles/56-http.json","keywords":null,"cover":null,"text":"整理一下HTTP的请求方法、GET&#x2F;POST方法的区别、HTTP状态码、跨域解决方法，最近面试也被问到这些问题。 一、HTTP的请求方法 GET: 通...","permalink":"/post/56-http","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"http","slug":"http","count":1,"path":"api/tags/http.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}