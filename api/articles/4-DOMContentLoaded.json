{"title":"4、DOMContentLoaded","uid":"c7406f8b3858eb2fa2b3ad7a9a8abb89","slug":"4-DOMContentLoaded","date":"2019-08-18T12:00:00.000Z","updated":"2022-09-05T07:29:09.000Z","comments":true,"path":"api/articles/4-DOMContentLoaded.json","keywords":null,"cover":null,"content":"<p>DOMContentLoaded顾名思义就是DOM内容加载完毕。</p>\n<span id=\"more\"></span>\n\n<p>当初始的 HTML 文档被完全加载和解析完成之后，DOMContentLoaded 事件被触发，而无需等待样式表、图像和子框架的完全加载。另一个不同的事件 load 应该仅用于检测一个完全加载的页面。 这里有一个常见的错误，就是在本应使用 DOMContentLoaded 会更加合适的情况下，却选择使用 load，所以要谨慎。<br>注意：DOMContentLoaded 事件必须等待其所属script之前的样式表加载解析完成才会触发。</p>\n<p>在Vue项目的App.vue中，我们可以这样设置字体。</p>\n<p>1、获取HTML元素；</p>\n<p>2、根据屏幕宽度动态计算fontSize</p>\n<p>3、当fontSize大于50时，设置最大值为50</p>\n<p>4、设置HTML的fontSize属性，使rem生效，1rem &#x3D; fontSize + “px”</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// DOMContentLoaded 事件必须等待其所属script之前的样式表加载解析完成才会触发。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  document.addEventListener(&#39;DOMContentLoaded&#39;, () =&gt; </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// 获取html元素</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    const html </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> document</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">querySelector</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">html</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// 根据屏幕宽度动态计算fontSize</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    let fontSize </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> window</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">innerWidth </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// 当fontSize大于50时，设置最大值为50</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fontSize </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> fontSize </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">50</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">?</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">50</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> fontSize</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">// 设置html的fontSize属性，使rem生效，1rem = fontSize + &#39;px&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    html</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">style</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">fontSize </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> fontSize </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">px</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div>","text":"DOMContentLoaded顾名思义就是DOM内容加载完毕。 当初始的 HTML 文档被完全加载和解析完成之后，DOMContentLoaded 事件被触发...","permalink":"/post/4-DOMContentLoaded","photos":[],"count_time":{"symbolsCount":893,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"dev","slug":"dev","count":15,"path":"api/tags/dev.json"}],"toc":"","author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"5、Vue2基础知识","uid":"2d72f36e7e873f400f2d34d162042379","slug":"5-vue-simple","date":"2019-09-26T12:00:00.000Z","updated":"2022-09-05T07:31:02.000Z","comments":true,"path":"api/articles/5-vue-simple.json","keywords":null,"cover":null,"text":"Vue基础知识点，包括常用指令、计算属性、侦听属性等。 Vuejs响应式原理txt编译组件：对特殊标记的部分（比如双大括号部分）进行替换为相应的数据值。 收集依...","permalink":"/post/5-vue-simple","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[],"tags":[{"name":"vue","slug":"vue","count":17,"path":"api/tags/vue.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"3、如何使用CSS画三角形?","uid":"1ad36476bc6958df3ba1c341f1e34288","slug":"3-css","date":"2019-06-20T12:00:00.000Z","updated":"2022-11-08T07:50:49.000Z","comments":true,"path":"api/articles/3-css.json","keywords":null,"cover":null,"text":"三角形的画法,一般经常使用三角形作为提示框、下拉菜单等功能。 一、CSS 画三角形实现方式1、HTML 结构 html&lt;div class=&quot;i...","permalink":"/post/3-css","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"dev","slug":"dev","count":15,"path":"api/tags/dev.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}