{"title":"85、常用代码片段","uid":"6f52d7fc55673b773fa0af36dfe006d6","slug":"85.js-function","date":"2022-08-06T15:00:00.000Z","updated":"2022-10-13T07:30:43.000Z","comments":true,"path":"api/articles/85.js-function.json","keywords":null,"cover":null,"content":"<p>整理一些常用的代码片段</p>\n<span id=\"more\"></span>\n\n<h2 id=\"一、数组重排序\"><a href=\"#一、数组重排序\" class=\"headerlink\" title=\"一、数组重排序\"></a>一、数组重排序</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">const shuffle = (arr) =&gt; arr.sort(() =&gt; Math.random() - 0.5);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const arr = [1, 2, 3, 4, 5];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console.log(shuffle(arr));</span></span></code></pre></div><h2 id=\"二、复制到剪切板\"><a href=\"#二、复制到剪切板\" class=\"headerlink\" title=\"二、复制到剪切板\"></a>二、复制到剪切板</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">const copyToClipboard = (text) =&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  navigator.clipboard &amp;&amp;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  navigator.clipboard.writeText &amp;&amp;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  navigator.clipboard.writeText(text);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">copyToClipboard(&quot;Hello World!&quot;);</span></span></code></pre></div><h2 id=\"三、滚动到顶部\"><a href=\"#三、滚动到顶部\" class=\"headerlink\" title=\"三、滚动到顶部\"></a>三、滚动到顶部</h2><p>behavior:”smooth”：开启平滑滚动</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">const scrollToTop = (element) =&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  element.scrollIntoView(&#123; behavior: &quot;smooth&quot;, block: &quot;start&quot; &#125;);</span></span></code></pre></div><h2 id=\"四、检测设备\"><a href=\"#四、检测设备\" class=\"headerlink\" title=\"四、检测设备\"></a>四、检测设备</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">const detectDeviceType = () =&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    navigator.userAgent</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  )</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ? &quot;Mobile&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    : &quot;Desktop&quot;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console.log(detectDeviceType());</span></span></code></pre></div><h2 id=\"五、深拷贝对象\"><a href=\"#五、深拷贝对象\" class=\"headerlink\" title=\"五、深拷贝对象\"></a>五、深拷贝对象</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">const deepCopy = (obj) =&gt; JSON.parse(JSON.stringify(obj));</span></span></code></pre></div><h2 id=\"六、等待函数\"><a href=\"#六、等待函数\" class=\"headerlink\" title=\"六、等待函数\"></a>六、等待函数</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">const wait = (ms) =&gt; new Promise((resolve) =&gt; setTimeout(resolve, ms));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const asyncFn = async () =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  await wait(1000);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  console.log(&quot;等待异步函数执行结束&quot;);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">asyncFn();</span></span></code></pre></div><h2 id=\"七、生成随机色\"><a href=\"#七、生成随机色\" class=\"headerlink\" title=\"七、生成随机色\"></a>七、生成随机色</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">const generateRandomHexColor = () =&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  `#$&#123;Math.floor(Math.random() * 0xffffff).toString(16)&#125;`;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console.log(generateRandomHexColor());</span></span></code></pre></div><h2 id=\"八、数组结构与树结构的转换\"><a href=\"#八、数组结构与树结构的转换\" class=\"headerlink\" title=\"八、数组结构与树结构的转换\"></a>八、数组结构与树结构的转换</h2><p>数组结构数据</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">const arrayData = [</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123; id: 2, title: &quot;中国&quot;, parent_id: 0 &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123; id: 3, title: &quot;上海&quot;, parent_id: 2 &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123; id: 4, title: &quot;浦东新区&quot;, parent_id: 3 &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123; id: 5, title: &quot;新场古镇&quot;, parent_id: 4 &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123; id: 6, title: &quot;湖南省&quot;, parent_id: 2 &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123; id: 1, title: &quot;俄罗斯&quot;, parent_id: 0 &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">];</span></span></code></pre></div><p>方法一、使用递归：</p>\n<p>1、递归需分为两个函数来完成<br>2、 以为返回的递归函数主要处理查找 id 添加 children<br>3、 由转化函数将结果返回</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">/**</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * 递归查找添加children</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @param &#123;数组数据&#125; data</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @param &#123;存放返回结果&#125; result</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @param &#123;父id&#125; pid</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">function getChildren(data, result, pid) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  for (const item of data) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    if (item.parent_id === pid) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      const newItem = &#123; children: [], ...item &#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      result.push(newItem);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      getChildren(data, newItem.children, item.id);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">/**</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * 转化方法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @param &#123;数组数据&#125; data</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @param &#123;父id&#125; pid</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @returns</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">function arrayToTree(data, pid) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  let result = [];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  getChildren(data, result, pid);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  return result;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console.log(arrayToTree(arrayData, 0));</span></span></code></pre></div><p>方法二、reduce</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">/**</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * 数组结构转为树结构</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @param &#123;*&#125; data 数组数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @returns</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">function arrayToTree(data) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  const result = [];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  const obj = data.reduce((pre, cur) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    pre[cur.id] = cur;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    return pre;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;, &#123;&#125;);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  for (let item of data) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    if (item.parent_id === 0) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      result.push(item);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      continue;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    if (item.parent_id in obj) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      const parent = obj[item.parent_id];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      parent.children = parent.children || [];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      parent.children.push(item);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  return result;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span></code></pre></div><h2 id=\"九、树结构转数组结构\"><a href=\"#九、树结构转数组结构\" class=\"headerlink\" title=\"九、树结构转数组结构\"></a>九、树结构转数组结构</h2><p>数组结构</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">/** 树状形结构数据treeData */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const treeData = [</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    id: 2,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    title: &quot;中国&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    parent_id: 0,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    children: [</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        id: 3,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        title: &quot;上海&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        parent_id: 2,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        children: [</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            id: 4,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            title: &quot;浦东新区&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            parent_id: 3,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            children: [&#123; id: 5, title: &quot;新场古镇&quot;, parent_id: 4 &#125;],</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        ],</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &#123; id: 6, title: &quot;湖南省&quot;, parent_id: 2 &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ],</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123; id: 1, title: &quot;俄罗斯&quot;, parent_id: 0 &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">];</span></span></code></pre></div><p>递归方法</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">/**</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * 树结构数组扁平化</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @param &#123;*&#125; data 树结构的数组</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @returns</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">function treeToArray(data) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  return data.reduce((pre, cur) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    const &#123; children = [], ...item &#125; = cur;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    return pre.concat([&#123; ...item &#125;], treeToArray(children));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;, []);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span></code></pre></div><h2 id=\"十、数据类型验证\"><a href=\"#十、数据类型验证\" class=\"headerlink\" title=\"十、数据类型验证\"></a>十、数据类型验证</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">function typeOf(obj) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  const toString = Object.prototype.toString;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  const map = &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object Boolean]&quot;: &quot;boolean&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object Number]&quot;: &quot;number&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object String]&quot;: &quot;string&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object Function]&quot;: &quot;function&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object Array]&quot;: &quot;array&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object Date]&quot;: &quot;date&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object RegExp]&quot;: &quot;regExp&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object Undefined]&quot;: &quot;undefined&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object Null]&quot;: &quot;null&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object Object]&quot;: &quot;object&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &quot;[object FormData]&quot;: &quot;formData&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  return map[toString.call(obj)];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span></code></pre></div><h2 id=\"十一、只能输入金额\"><a href=\"#十一、只能输入金额\" class=\"headerlink\" title=\"十一、只能输入金额\"></a>十一、只能输入金额</h2><div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">:rules=&quot;&#123; required: itrue, validator: validatePrice, trigger: &#39;blur&#39; &#125;&quot;</span></span></code></pre></div><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">validatePrice(rule, value, callback) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    if (!value) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        callback(new Error(&#39;请输入价格&#39;))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125; else if (!/(^[1-9]\\d*(\\.\\d&#123;1,2&#125;)?$)|(^0(\\.\\d&#123;1,2&#125;)?$)/.test(value)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        callback(new Error(&#39;请输入有效价格&#39;))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125; else if (value &gt;= 99999999) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        callback(new Error(&#39;超过最大金额&#39;))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125; else &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        callback()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;,</span></span></code></pre></div><h2 id=\"十二、数字单位：10000-转换为万（含：亿）\"><a href=\"#十二、数字单位：10000-转换为万（含：亿）\" class=\"headerlink\" title=\"十二、数字单位：10000 转换为万（含：亿）\"></a>十二、数字单位：10000 转换为万（含：亿）</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">/** 数字超过一万转换为万</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @param &#123; Number &#125; value 数值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @param &#123; Number &#125; decimal 保留几位小数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * @returns &#123; String &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const transNumberToShort = (value, decimal = 2) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  const k = 10000;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  const sizes = [&quot;&quot;, &quot;万&quot;, &quot;亿&quot;, &quot;万亿&quot;];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  let i = undefined;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  let str = &quot;&quot;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  if (value &lt; k) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    str = value;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125; else &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    i = Math.floor(Math.log(value) / Math.log(k));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    str = (value / Math.pow(k, i)).toFixed(decimal) + sizes[i];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  return str;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;;</span></span></code></pre></div><h2 id=\"十三、简单的数据双向绑定\"><a href=\"#十三、简单的数据双向绑定\" class=\"headerlink\" title=\"十三、简单的数据双向绑定\"></a>十三、简单的数据双向绑定</h2><div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">&lt;html lang=&quot;en&quot;&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &lt;head&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot; /&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &lt;title&gt;Document&lt;/title&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &lt;/head&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &lt;body&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &lt;div id=&quot;app&quot;&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &lt;input type=&quot;text&quot; id=&quot;a&quot; /&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &lt;span id=&quot;b&quot;&gt;&lt;/span&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &lt;/div&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &lt;/body&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &lt;script&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    var obj = &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      val: null,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;; //定义一个空对象</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Object.defineProperty(obj, &quot;val&quot;, &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      // 这里的 val 就是 obj 里面的值</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      get: function () &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        return val;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &#125;,</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      set: function (newVal) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        val = newVal; //定义val等于修改后的内容</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        if (!val) return; // 阻止显示 undefined</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        document.getElementById(&quot;a&quot;).value = val; //让文本框的内容等于val</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        document.getElementById(&quot;b&quot;).innerHTML = val; //让span的内容等于val</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    document.addEventListener(&quot;keyup&quot;, function (e) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      //当在文本框输入内容时让对象里你定义的val等于文本框的值</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      obj.val = e.target.value;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &lt;/script&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&lt;/html&gt;</span></span></code></pre></div><h2 id=\"十四、数组大小排序\"><a href=\"#十四、数组大小排序\" class=\"headerlink\" title=\"十四、数组大小排序\"></a>十四、数组大小排序</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">var num = [7, 8, 6, 5, 2];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">//倒序排列</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">num.sort((a, b) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  return b - a;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">//正序排列</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">num.sort((a, b) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  return a - b;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;);</span></span></code></pre></div><h2 id=\"十五、js-从数组里面取出某两个值作为对象的-key-和-value\"><a href=\"#十五、js-从数组里面取出某两个值作为对象的-key-和-value\" class=\"headerlink\" title=\"十五、js 从数组里面取出某两个值作为对象的 key 和 value\"></a>十五、js 从数组里面取出某两个值作为对象的 key 和 value</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">const data = [</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    id: 1,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    content: &quot;1111&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    id: 2,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    content: &quot;2222&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    id: 3,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    content: &quot;3333&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let lessonObj = data.reduce((obj, cur, index) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  obj[`config_$&#123;cur[&quot;id&quot;]&#125;`] = cur[&quot;content&quot;];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  return obj;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;, &#123;&#125;);</span></span></code></pre></div><h2 id=\"十六、深拷贝、浅拷贝\"><a href=\"#十六、深拷贝、浅拷贝\" class=\"headerlink\" title=\"十六、深拷贝、浅拷贝\"></a>十六、深拷贝、浅拷贝</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>区别：浅拷贝地址还是指向原来那个内存地址，深拷贝是重新开辟一个内存地址</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>浅拷贝只是对指针的拷贝，拷贝后两个指针指向同一个内存空间</p></blockquote>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">Object.assign()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Array.prototype.slice(0)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">扩展运算符（...）</span></span></code></pre></div><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>深拷贝不但对指针进行拷贝，而且对指针指向的内容进行拷贝</p></blockquote>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">// 方法一</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">JSON.parse(JSON.stringify());</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// 方法二</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// 循环对象，把对象的 KEY 和 VALUE 存放到一个新的变量里面</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">function deepClone(source) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  const targetObj = source.constructor === Array ? [] : &#123;&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  for (keys in source) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    if (source.hasOwnProperty(keys)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      // 数组和对象</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      if (source[keys] &amp;&amp; typeof source[keys] === &quot;object&quot;) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        // targetObj[keys] = targetObj[keys] === Array ? [] : &#123;&#125;; // 只是为了可读性，可要可不要</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        targetObj[keys] = deepClone(source[keys]);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &#125; else &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        // 基本类型</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        targetObj[keys] = source[keys];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  return targetObj;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span></code></pre></div>","text":"整理一些常用的代码片段 一、数组重排序jsconst shuffle = (arr) =&gt; arr.sort(() =&gt; Math.random()...","permalink":"/post/85.js-function","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"js","slug":"js","count":11,"path":"api/tags/js.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%95%B0%E7%BB%84%E9%87%8D%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">一、数组重排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%A4%8D%E5%88%B6%E5%88%B0%E5%89%AA%E5%88%87%E6%9D%BF\"><span class=\"toc-text\">二、复制到剪切板</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%BB%9A%E5%8A%A8%E5%88%B0%E9%A1%B6%E9%83%A8\"><span class=\"toc-text\">三、滚动到顶部</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%A3%80%E6%B5%8B%E8%AE%BE%E5%A4%87\"><span class=\"toc-text\">四、检测设备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">五、深拷贝对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E7%AD%89%E5%BE%85%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">六、等待函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E8%89%B2\"><span class=\"toc-text\">七、生成随机色</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AB%E3%80%81%E6%95%B0%E7%BB%84%E7%BB%93%E6%9E%84%E4%B8%8E%E6%A0%91%E7%BB%93%E6%9E%84%E7%9A%84%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">八、数组结构与树结构的转换</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B9%9D%E3%80%81%E6%A0%91%E7%BB%93%E6%9E%84%E8%BD%AC%E6%95%B0%E7%BB%84%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">九、树结构转数组结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E3%80%81%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">十、数据类型验证</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%B8%80%E3%80%81%E5%8F%AA%E8%83%BD%E8%BE%93%E5%85%A5%E9%87%91%E9%A2%9D\"><span class=\"toc-text\">十一、只能输入金额</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%BA%8C%E3%80%81%E6%95%B0%E5%AD%97%E5%8D%95%E4%BD%8D%EF%BC%9A10000-%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%87%EF%BC%88%E5%90%AB%EF%BC%9A%E4%BA%BF%EF%BC%89\"><span class=\"toc-text\">十二、数字单位：10000 转换为万（含：亿）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%B8%89%E3%80%81%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A\"><span class=\"toc-text\">十三、简单的数据双向绑定</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E5%9B%9B%E3%80%81%E6%95%B0%E7%BB%84%E5%A4%A7%E5%B0%8F%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">十四、数组大小排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%BA%94%E3%80%81js-%E4%BB%8E%E6%95%B0%E7%BB%84%E9%87%8C%E9%9D%A2%E5%8F%96%E5%87%BA%E6%9F%90%E4%B8%A4%E4%B8%AA%E5%80%BC%E4%BD%9C%E4%B8%BA%E5%AF%B9%E8%B1%A1%E7%9A%84-key-%E5%92%8C-value\"><span class=\"toc-text\">十五、js 从数组里面取出某两个值作为对象的 key 和 value</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E5%85%AD%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D\"><span class=\"toc-text\">十六、深拷贝、浅拷贝</span></a></li></ol>","author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"86、canvas电子签名","uid":"b9ee1ea0abd68e724076c2d54440fea9","slug":"86.signature","date":"2022-08-08T15:00:00.000Z","updated":"2022-10-13T03:04:35.000Z","comments":true,"path":"api/articles/86.signature.json","keywords":null,"cover":null,"text":"canvas电子签名 html&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&g...","permalink":"/post/86.signature","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"js","slug":"js","count":11,"path":"api/tags/js.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"84、Chrome快速切换搜索引擎","uid":"7625dec645dd96c87c054cb6dd2304f5","slug":"84.search","date":"2022-08-04T14:00:00.000Z","updated":"2022-10-12T01:34:25.000Z","comments":true,"path":"api/articles/84.search.json","keywords":null,"cover":null,"text":"如何在不同的搜索引擎的之间快速切换？其实谷歌浏览器（Chrome）自带了一个关键词功能，只需要稍加修改，就可以方便的实现搜索引擎切换，不需要额外安装任何特殊软件...","permalink":"/post/84.search","photos":[],"count_time":{"symbolsCount":274,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"tool","slug":"tool","count":4,"path":"api/tags/tool.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}