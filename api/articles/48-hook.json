{"title":"48、用hook处理组件内定时器","uid":"0d6957d2727610cbc2b8e511c4386db6","slug":"48-hook","date":"2022-01-01T12:00:00.000Z","updated":"2022-09-05T07:53:27.000Z","comments":true,"path":"api/articles/48-hook.json","keywords":null,"cover":null,"content":"<p>vue 项目使用 hook 处理组件内定时器的方式。一般是使用生命周期钩子函数beforeDestory来销毁定时器。从Vue源码的lifecycle.js中发现了一种拓展方法，可以提升代码的简洁性，而且还可以减少data里无用变量的定义。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"一、使用生命周期函数处理定时器\"><a href=\"#一、使用生命周期函数处理定时器\" class=\"headerlink\" title=\"一、使用生命周期函数处理定时器\"></a>一、使用生命周期函数处理定时器</h2><p>通常处理组件内定时器的步骤是下面这样的</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">export</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">default</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">mounted</span><span style=\"color: #F07178\">()</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">timer</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">setInterval</span><span style=\"color: #F07178\">（</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// do something</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;,</span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #F07178\">）</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">beforeDestory</span><span style=\"color: #F07178\">()</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #82AAFF\">clearInterval</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #BABED8\">timer</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"二、使用-hook-处理定时器\"><a href=\"#二、使用-hook-处理定时器\" class=\"headerlink\" title=\"二、使用 hook 处理定时器\"></a>二、使用 hook 处理定时器</h2><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">export</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">default</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #82AAFF\">mounted</span><span style=\"color: #F07178\">()</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">timer</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">setInterval</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #F07178\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #676E95; font-style: italic\">// do something</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;,</span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #82AAFF\">$once</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hook:beforeDestory</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,()</span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">clearInterval</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">timer</span><span style=\"color: #F07178\">);)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"三、适用场景\"><a href=\"#三、适用场景\" class=\"headerlink\" title=\"三、适用场景:\"></a>三、适用场景:</h2><p>处理可视化图表的时候，我们需要在数据渲染到页面之前让页面有 loading 动画，mounted 挂载之后停止 loading，beforeUpdate 时开始 loading，updated 之后停止 loading。</p>\n<p>使用 hook 处理:</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">&lt;v-chart&gt;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">  @hook:mounted=&quot;loading = false&quot; @hook:beforeUpdated=&quot;loading = true&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">  @hook:updated=&quot;loading = false&quot; :data=&quot;data&quot;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&lt;/v-chart&gt;</span></span></code></pre></div><h2 id=\"四、补充说明：如何实现父组件监听子组件生命周期？\"><a href=\"#四、补充说明：如何实现父组件监听子组件生命周期？\" class=\"headerlink\" title=\"四、补充说明：如何实现父组件监听子组件生命周期？\"></a>四、补充说明：如何实现父组件监听子组件生命周期？</h2><h3 id=\"1、方法一：-emit\"><a href=\"#1、方法一：-emit\" class=\"headerlink\" title=\"1、方法一：$emit\"></a>1、方法一：$emit</h3><p>父组件给子组件传递多个回调函数，依赖子组件在自身的生命周期李通过vm.$emit的方式，调用父组件生命的回调函数。</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">&lt;!-- 父组件 --&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">template</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">Child</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">@mounted</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">onMounted</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #C792EA\">@updated</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">onUpdated</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #C792EA\">@beforeDestory</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">beforeDestory</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        &gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">Child</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">template</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><p>子组件：</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #82AAFF\">mounted</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #82AAFF\">$emit</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">mounted</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">updated</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #82AAFF\">$emit</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">updated</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">beforeDestory</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">this.</span><span style=\"color: #82AAFF\">$emit</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">beforeDestory</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"2、方法二：-hook\"><a href=\"#2、方法二：-hook\" class=\"headerlink\" title=\"2、方法二：@hook\"></a>2、方法二：@hook</h3><p>父组件模板</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">template</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">Child</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">@hook:mounted</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">onMounted</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #C792EA\">@hook:updated</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">onUpdated</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">            </span><span style=\"color: #C792EA\">@hook:beforeDestory</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">beforeDestory</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        &gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">Child</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">template</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><p>vue源码的lifecycle.js中，Vue的生命周期各个阶段都会去调用一个callHook函数，这个函数支持2个参数：实例vm和生命周期钩子名称,callHook里面执行了vm.$emit(‘hook:’+hook)。</p>\n<p>lifecycle.js源码片段（这个文件在Vue源码的src&#x2F;core&#x2F;instance&#x2F;lifecycle.js）</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// callHook函数</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">export</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">callHook</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8; font-style: italic\">vm</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Component</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">hook</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95; font-style: italic\">// #7573 disable dep collection when invoking lifecycle hooks</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #82AAFF\">pushTarget</span><span style=\"color: #F07178\">()</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">handlers</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">vm</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">$options</span><span style=\"color: #F07178\">[</span><span style=\"color: #BABED8\">hook</span><span style=\"color: #F07178\">]</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">info</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">`$&#123;</span><span style=\"color: #BABED8\">hook</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #C3E88D\"> hook</span><span style=\"color: #89DDFF\">`</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> (</span><span style=\"color: #BABED8\">handlers</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #F07178\"> (</span><span style=\"color: #C792EA\">let</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">i</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">j</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">handlers</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">i</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #82AAFF\">invokeWithErrorHandling</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">handlers</span><span style=\"color: #F07178\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #F07178\">]</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">vm</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">null,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">vm</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">info</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> (</span><span style=\"color: #BABED8\">vm</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">_hasHookEvent</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">vm</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">$emit</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hook:</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">hook</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #82AAFF\">popTarget</span><span style=\"color: #F07178\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>@hook原理：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>当我们在子组件上传了对应的@hook:mounted钩子，也就执行了vm.$on(‘hook:mounted’),vue实例在生命周期里本身就会执行vm.$emit(‘hook:mounted’),也触发了我们绑定给子组件的回调函数。</p></blockquote>\n","text":"vue 项目使用 hook 处理组件内定时器的方式。一般是使用生命周期钩子函数beforeDestory来销毁定时器。从Vue源码的lifecycle.js中发...","permalink":"/post/48-hook","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"vue","slug":"vue","count":17,"path":"api/tags/vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E4%BD%BF%E7%94%A8%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0%E5%A4%84%E7%90%86%E5%AE%9A%E6%97%B6%E5%99%A8\"><span class=\"toc-text\">一、使用生命周期函数处理定时器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E4%BD%BF%E7%94%A8-hook-%E5%A4%84%E7%90%86%E5%AE%9A%E6%97%B6%E5%99%A8\"><span class=\"toc-text\">二、使用 hook 处理定时器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">三、适用场景:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E8%A1%A5%E5%85%85%E8%AF%B4%E6%98%8E%EF%BC%9A%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%88%B6%E7%BB%84%E4%BB%B6%E7%9B%91%E5%90%AC%E5%AD%90%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%9F\"><span class=\"toc-text\">四、补充说明：如何实现父组件监听子组件生命周期？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A-emit\"><span class=\"toc-text\">1、方法一：$emit</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%96%B9%E6%B3%95%E4%BA%8C%EF%BC%9A-hook\"><span class=\"toc-text\">2、方法二：@hook</span></a></li></ol></li></ol>","author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"49、websocket实现客户端和服务端的通信","uid":"25d32930e0f2e91a36c0f3813d809188","slug":"49-websocket","date":"2022-01-03T12:00:00.000Z","updated":"2022-09-05T07:53:52.000Z","comments":true,"path":"api/articles/49-websocket.json","keywords":null,"cover":null,"text":"WebSocket 是 HTML5 开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。传统的http协议，通信只能由客户端发起。websocket实现了...","permalink":"/post/49-websocket","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"websocket","slug":"websocket","count":1,"path":"api/tags/websocket.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"47、git提交规范","uid":"9abbc13986764d2e4a75f0464cdeed8d","slug":"47-git","date":"2021-12-22T02:05:56.000Z","updated":"2022-09-05T07:53:11.000Z","comments":true,"path":"api/articles/47-git.json","keywords":null,"cover":null,"text":"使用commitizen和cz-customizable规范代码提交 1.安装commitizen和cz-customizablejsnpm install -...","permalink":"/post/47-git","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}