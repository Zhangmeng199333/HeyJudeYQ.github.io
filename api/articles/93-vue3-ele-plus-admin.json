{"title":"93、使用vue3+element-plus写后台管理系统：（三）","uid":"6b8bfac8e09d7ad60db5fe489aa355a1","slug":"93-vue3-ele-plus-admin","date":"2022-11-10T12:00:00.000Z","updated":"2022-11-24T06:22:14.000Z","comments":true,"path":"api/articles/93-vue3-ele-plus-admin.json","keywords":null,"cover":null,"content":"<p>包括配置环境变量封装 axios、接口请求模块、vuex 登录请求动作、保存服务端的 token、登录鉴权</p>\n<span id=\"more\"></span>\n\n<h2 id=\"一、配置环境变量及封装-axios-模块\"><a href=\"#一、配置环境变量及封装-axios-模块\" class=\"headerlink\" title=\"一、配置环境变量及封装 axios 模块\"></a>一、配置环境变量及封装 axios 模块</h2><p>在跟目录下创建.env.development .env.production 2 个文件</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">// .env.development</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ENV = &quot;development&quot;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">VUE_APP_BASE_API = &quot;/api&quot;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// .env.production</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ENV = &quot;production&quot;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">VUE_APP_BASE_APIU = &quot;/prod-api&quot;;</span></span></code></pre></div><p>axios 的封装 utils 下创建 request.js</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">import axios from &quot;axios&quot;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const service = axios.create(&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  baseURL: process.env.VUE_APP_BASE_API,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  timeout: 5000,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">export default service;</span></span></code></pre></div><h2 id=\"二、封装登录请求动作\"><a href=\"#二、封装登录请求动作\" class=\"headerlink\" title=\"二、封装登录请求动作\"></a>二、封装登录请求动作</h2><p>根目录下的 src 下创建 api 文件夹，<code>touch sys.js</code></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">import request from &quot;@/utils/request&quot;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">export const login = (data) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  return request(&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    url: &quot;/sys/login&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    method: &quot;PSOT&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    data,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;;</span></span></code></pre></div><p>将登录请求的动作封装到 vuex 的 action 中，在<code>store</code>文件夹下创建 modules 文件夹，在 modules 下<code>touch user.js</code>模块（此模块用于处理所有和用户相关的内容）</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>安装 md5 插件，加密登录密码 yarn add md5</p></blockquote>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">// user.js</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import &#123; login &#125; from &#39;@/api/sys&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import md5 from &#39;md5&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">export default &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  namespaced: true,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  state: () =&gt; (&#123;&#125;),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  mutations: &#123;&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  actions: &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    login(context, userInfo) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      const &#123; username, password &#125; = userInfo</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      return new Promise((resolve, reject) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        login(&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          username,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          password: md5(password)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          .then(data =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            resolve()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          .catch(err =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            reject(err)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// 在store/index.js中注册</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import &#123; createStore &#125; from &#39;vuex&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import user from &#39;./modules/user.js&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">export default createStore(&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  modules:&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    user</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;)</span></span></code></pre></div><p>在登录页，触发定义的 action，此时存在一个问题就是，我们当前请求的接口不存在，需要使用 devServer 代理</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">// vue.config.js</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">module.exports = &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  devService: &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    proxy: &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &quot;/api&quot;: &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        // 要代理的服务器地址， 不需要写api</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        target: &quot;https://api.xxx.com&quot;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        changeOrigin: true, // 是否跨域</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;;</span></span></code></pre></div><p>重启项目，再次点击登录，就可以跳转到首页了。</p>\n<h2 id=\"三、本地缓存的处理\"><a href=\"#三、本地缓存的处理\" class=\"headerlink\" title=\"三、本地缓存的处理\"></a>三、本地缓存的处理</h2><p>登录成功之后，前端会拿到后端返回的 token,我们需要将 token 进行缓存</p>\n<p>缓存的 2 种方式：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1、本地缓存：localStorage<br>2、全局状态管理： vuex</p></blockquote>\n<p>localStorage 可以方便实现自动登录功能<br>保存在 vuex 中是为了后面在其他位置进行使用</p>\n<h3 id=\"一-、localStorage\"><a href=\"#一-、localStorage\" class=\"headerlink\" title=\"(一)、localStorage\"></a>(一)、localStorage</h3><p>在 utils 文件夹下，新建 storage..js<br>1、封装 4 个方法</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">/**</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * 存储数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">export const setItem = (key, value) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  // 将数组、对象类型的数据转化为 JSON 字符串进行存储</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  if (typeof value === &quot;object&quot;) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    value = JSON.stringify(value);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  window.localStorage.setItem(key, value);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">/**</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * 获取数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">export const getItem = (key) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  const data = window.localStorage.getItem(key);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  try &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    return JSON.parse(data);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125; catch (err) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    return data;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">/**</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * 删除数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">export const removeItem = (key) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  window.localStorage.removeItem(key);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">/**</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> * 删除所有数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\"> */</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">export const removeAllItem = (key) =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  window.localStorage.clear();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;;</span></span></code></pre></div><h3 id=\"二-、vuex-处理-token\"><a href=\"#二-、vuex-处理-token\" class=\"headerlink\" title=\"(二)、vuex 处理 token\"></a>(二)、vuex 处理 token</h3><p>在 store 的 user.js 中</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">import &#123; login &#125; from &#39;@/api/sys&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import md5 from &#39;md5&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import &#123; setItem, getItem &#125; from &#39;@/utils/storage&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// 常量目录 export const TOKEN = &#39;token&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import &#123; TOKEN &#125; from &#39;@/constant&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">export default &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  namespaced: true,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  state: () =&gt; (&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    token: getItem(TOKEN) || &#39;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  mutations: &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    setToken(state, token) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      state.token = token</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      setItem(TOKEN, token)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  actions: &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    login(context, userInfo) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      ...</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          .then(data =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            this.commit(&#39;user/setToken&#39;, data.data.data.token)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            resolve()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">          ...</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span></code></pre></div><h2 id=\"四、响应数据的统一处理\"><a href=\"#四、响应数据的统一处理\" class=\"headerlink\" title=\"四、响应数据的统一处理\"></a>四、响应数据的统一处理</h2><p>上面这一行代码<code>this.commit(&#39;user/setToken&#39;, data.data.data.token)</code>，需要使用 data.data.data.token，书写方式不美观。</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">import axios from &#39;axios&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import &#123; ElMessage &#125; from &#39;element-plus&#39;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">...</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// 响应拦截器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">service.interceptors.response.use(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  response =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    const &#123; success, message, data &#125; = response.data</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    //   要根据success的成功与否决定下面的操作</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    if (success) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      return data</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125; else &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      // 业务错误</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      ElMessage.error(message) // 提示错误消息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      return Promise.reject(new Error(message))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  error =&gt; &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    // TODO: 将来处理 token 超时问题</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ElMessage.error(error.message) // 提示错误信息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    return Promise.reject(error)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">export default service</span></span></code></pre></div><p>上面的代码简写为：</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">this.commit(&quot;user/setToken&quot;, data.token);</span></span></code></pre></div>","text":"包括配置环境变量封装 axios、接口请求模块、vuex 登录请求动作、保存服务端的 token、登录鉴权 一、配置环境变量及封装 axios 模块在跟目录下创...","permalink":"/post/93-vue3-ele-plus-admin","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"vue3","slug":"vue3","count":24,"path":"api/tags/vue3.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%8F%8A%E5%B0%81%E8%A3%85-axios-%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">一、配置环境变量及封装 axios 模块</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%B0%81%E8%A3%85%E7%99%BB%E5%BD%95%E8%AF%B7%E6%B1%82%E5%8A%A8%E4%BD%9C\"><span class=\"toc-text\">二、封装登录请求动作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98%E7%9A%84%E5%A4%84%E7%90%86\"><span class=\"toc-text\">三、本地缓存的处理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80-%E3%80%81localStorage\"><span class=\"toc-text\">(一)、localStorage</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C-%E3%80%81vuex-%E5%A4%84%E7%90%86-token\"><span class=\"toc-text\">(二)、vuex 处理 token</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86\"><span class=\"toc-text\">四、响应数据的统一处理</span></a></li></ol>","author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"94、使用vue3+element-plus写后台管理系统：（四）","uid":"1813ccd46442cde5aca0aaf935690ed9","slug":"94-vue3-ele-plus-admin","date":"2022-11-19T12:00:00.000Z","updated":"2022-11-26T08:33:52.000Z","comments":true,"path":"api/articles/94-vue3-ele-plus-admin.json","keywords":null,"cover":null,"text":"包括后台项目 layout 基础架构、用户主动和被动退出、动态 menu 菜单、结构路由表、侧边菜单栏的收缩、组件状态驱动的动态 CSS 值 layout 基础...","permalink":"/post/94-vue3-ele-plus-admin","photos":[],"count_time":{"symbolsCount":"31k","symbolsTime":"28 mins."},"categories":[],"tags":[{"name":"vue3","slug":"vue3","count":24,"path":"api/tags/vue3.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"92、使用vue3+element-plus写后台管理系统：（二）","uid":"c23526b6d95d909419929499f0fd438e","slug":"92-vue3-ele-plus-admin","date":"2022-11-07T12:00:00.000Z","updated":"2022-11-24T06:22:20.000Z","comments":true,"path":"api/articles/92-vue3-ele-plus-admin.json","keywords":null,"cover":null,"text":"包括 element-plus 的安装、登录、svg icons 的处理（坑：svg 不显示的问题） 一、安装 element-plusshellnpm ins...","permalink":"/post/92-vue3-ele-plus-admin","photos":[],"count_time":{"symbolsCount":"9.8k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"vue3","slug":"vue3","count":24,"path":"api/tags/vue3.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}