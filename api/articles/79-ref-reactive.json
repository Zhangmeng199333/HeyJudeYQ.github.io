{"title":"79、ref-reactive","uid":"37b219f184dabddbe2b36b7003f81908","slug":"79-ref-reactive","date":"2022-07-31T13:00:00.000Z","updated":"2022-11-01T01:13:16.000Z","comments":true,"path":"api/articles/79-ref-reactive.json","keywords":null,"cover":null,"content":"<p>ref&#x2F;reactive 都能创建一个响应对象，这二者的区别是什么呢？</p>\n<span id=\"more\"></span>\n\n<h2 id=\"一、reactive\"><a href=\"#一、reactive\" class=\"headerlink\" title=\"一、reactive\"></a>一、reactive</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>reactive 都能创建一个响应对象或数组</p></blockquote>\n<p>1、reactive 用来创建引用类型的响应式数据</p>\n<p>2、reactive 的本质是将每一层的数据都解析成 proxy 对象</p>\n<p>3、reactive 的响应式默认都是递归的，改变某一层的值都会递归的调用一遍，重新渲染 dom</p>\n<p>4、直接解构，响应性会丢失，需要用 toRefs 包裹。引用类型直接改变引用地址也会导致响应式丢失</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">tempalte</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #676E95; font-style: italic\">&#123;&#123; state.count &#125;&#125;</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">tempalte</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// script 这里加了setup  没写setup需要在setup()&#123;&#125;内部定义 并返回（return）</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">setup</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> reactive </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> from &quot;vue&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const state = reactive(</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\">count:</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"></span></code></pre></div><h2 id=\"二、ref\"><a href=\"#二、ref\" class=\"headerlink\" title=\"二、ref\"></a>二、ref</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>vue3 提供了一个 ref()方法允许我们创建使用任何值类型的响应式 ref</p></blockquote>\n<p>1、ref 用来创建基础类型的响应式数据</p>\n<p>2、template 中默认调用 value 显示数据，script 中需要使用.value 调用</p>\n<p>3、和 react ref 差不多，react 是.current 获取值，vue3 是.value</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F07178\"> </span><span style=\"color: #BABED8\">ref</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">from</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">vue</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #BABED8\"> count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">ref</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(count)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// &#123; value:0 &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">count</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">value</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #BABED8\">(count</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">value)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 2</span></span></code></pre></div><p>相关 API</p>\n<p>1、Ref ts 定义 import { type Ref } from ‘vue’;</p>\n<p>2、isRef 判断是否为 ref 对象。一般是 ref，toRef，toRefs 创建的变量</p>\n<p>3、toRefs 将 reactive 对象解构为单个响应式对象</p>\n<p>4、shallowRef 创建一个跟踪自身  .value  变化的 ref，但不会使其值也变成响应式的，简单理解为创建一个和 ref 相同结构的非响应式变量</p>\n<p>5、triggerRef 强制更新页面 DOM。即使创建的 ref 没有变，想更新 dom 可以用</p>\n<p>6、customRef 提供类似于 computed 的 get 和 set，可自定义 ref 行为</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">template</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">HelloWorld</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">msg</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Hello Vue 3.0 + Vite</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">@some-event</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">callback</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">父组件监听事件：</span><span style=\"color: #676E95; font-style: italic\">&#123;&#123; counts &#125;&#125;</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">v-model</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">custom-input</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #C792EA\">:modelValue</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">searchText</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #C792EA\">@update:modelValue</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">newValue =&gt; searchText = newValue</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  /&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">Child</span><span style=\"color: #89DDFF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">h2</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    reactive方法用来创建响应式对象，它接收一个对象/数组参数，返回对象的响应式副本，当该对象的属性值发生变化，会自动更新使用该对象的地方。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">h2</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Object:</span><span style=\"color: #676E95; font-style: italic\">&#123;&#123; reactiveObj.name &#125;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">@click</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">setReactiveObj</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">Update</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Array:</span><span style=\"color: #676E95; font-style: italic\">&#123;&#123; reactiveArr &#125;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">@click</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">setReactiveArr</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">Update</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">h2</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ref 的作用就是将一个原始数据类型（primitive data</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    type）转换成一个带有响应式特性的数据类型，原始数据类型共有7个，分别是：String/</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Number /BigInt /Boolean /Symbol /Null /Undefined。 ref的值在 JS/TS</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    中读取和修改时，需要使用 .value获取，在模版中读取是，不需要使用 .value。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">h2</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    String:</span><span style=\"color: #676E95; font-style: italic\">&#123;&#123;refValue&#125;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">button</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">@click</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">setRefValue</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">Update</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">button</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Object:</span><span style=\"color: #676E95; font-style: italic\">&#123;&#123; refObj.name &#125;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">button</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">@click</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">setRefObj</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">Update</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">button</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">h2</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">vue3 reactive deep Obj/array</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">h2</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Deep Object:</span><span style=\"color: #676E95; font-style: italic\">&#123;&#123; reactiveDeepObj &#125;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">button</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">@click</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">setReactiveDeepObj</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">Update</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">button</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Deep Object Array: </span><span style=\"color: #676E95; font-style: italic\">&#123;&#123; reactiveDeepArr &#125;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">button</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">@click</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">setReactiveDeepArr</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">update</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">button</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">template</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">setup</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import HelloWorld from &#39;./components/HelloWorld.vue&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import CustomInput from &quot;./components/CustomInput.vue&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import Child from &quot;./components/Child.vue&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">import </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> ref</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> reactive</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> nextTick</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> provide </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> from &quot;vue&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let counts = ref(10)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const callback = () =&gt; </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #82AAFF\">nextTick</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #BABED8\">counts</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">value</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">14</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">const provideMsg = ref(&quot;provide message&quot;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">provide(&quot;provideMsg&quot;, provideMsg)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// reactive</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let reactiveObj = reactive(</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> name: </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">jude</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let setReactiveObj = () =&gt; </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  reactiveObj</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello,jude</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let reactiveArr = reactive([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let setReactiveArr = () =&gt; </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  reactiveArr[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello,jude!</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// Ref</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let refValue = ref(&#39;jude 1992&#39;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let setRefValue = () =&gt; </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  refValue</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello jude 1992</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let refObj = ref(</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> name: </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">jude 1992</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let setRefObj = () =&gt; </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  refObj</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">value</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello jude 1992</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// reactive可以用在深层对象或者数组</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let reactiveDeepObj = reactive(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    user: </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">      </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">jude 1992</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let setReactiveDeepObj = () =&gt; </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  reactiveDeepObj</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">user</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello  jude 1992</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let reactiveDeepArr = reactive(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  [&#39;a&#39;, [&#39;a1&#39;, &#39;a2&#39;, &#39;a3&#39;], &#39;c&#39;, &#39;d&#39;]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let setReactiveDeepArr = () =&gt; </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  reactiveDeepArr[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">][</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello jude 1992</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// reactive 返回值和源对象不相等</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let reactivSource = </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> name: </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">jude 1992</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">let reactiveData = reactive(reactivSource)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console.log(reactivSource === reactiveData) // false</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console.log(&#39;reactivSource&#39;, reactivSource);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">console.log(&#39;reactiveData&#39;, reactiveData);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// ts写法</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// let refObjValue = ref </span><span style=\"color: #89DDFF\">&lt; </span><span style=\"color: #F07178\">string</span><span style=\"color: #89DDFF\"> &gt;</span><span style=\"color: #BABED8\"> (&#39;jude 1992&#39;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">// let reactiveObjValue = reactive &lt; </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> name: string </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> &gt; (</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> name: </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">jude 1992</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"></span></code></pre></div><h2 id=\"三、总结\"><a href=\"#三、总结\" class=\"headerlink\" title=\"三、总结\"></a>三、总结</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.reactive 一般用于对象&#x2F;数组类型的数据，都不需要使用 .value；<br>2.ref 一般用于基础数据类型的数据，在 JS 中读取和修改时，需要使用 .value，在模版中使用时则不需要；<br>3.reactive 可以修改深层属性值，并保持响应；<br>4.reactive 返回值和源对象不同；<br>5.reactive 的属性值可以是 ref 值；<br>6.ref 本质也是 reactive，ref(obj)等价于 reactive({value: obj})。</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>ref 接收内部值（inner value）返回响应式 Ref 对象，reactive 返回响应式代理对象;从定义上看 ref 通常用于处理单值的响应式，reactive 用于处理对象类型的数据响应式;两者均是用于构造响应式数据，但是 ref 主要解决原始值的响应式问题;ref 返回的响应式数据在 JS 中使用需要加上.value 才能访问其值，在视图中使用会自动脱 ref，不需要.value；ref 可以接收对象或数组等非原始值，但内部依然是 reactive 实现响应式；reactive 内部如果接收 Ref 对象会自动脱 ref；使用展开运算符(…)展开 reactive 返回的响应式对象会使其失去响应性，可以结合 toRefs()将值转换为 Ref 对象之后再展开;reactive 内部使用 Proxy 代理传入对象并拦截该对象各种操作（trap），从而实现响应式。ref 内部封装一个 RefImpl 类，并设置 get value&#x2F;set value，拦截用户对值的访问，从而实现响应式。</p></blockquote>\n","text":"ref&#x2F;reactive 都能创建一个响应对象，这二者的区别是什么呢？ 一、reactive reactive 都能创建一个响应对象或数组 1、rea...","permalink":"/post/79-ref-reactive","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"js","slug":"js","count":11,"path":"api/tags/js.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81reactive\"><span class=\"toc-text\">一、reactive</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81ref\"><span class=\"toc-text\">二、ref</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">三、总结</span></a></li></ol>","author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"80、使用 element-plus 版本升级后的问题清单","uid":"6bbe4d12f264ccc0c8550bef06f65a4b","slug":"80-element-plus","date":"2022-08-01T12:00:00.000Z","updated":"2022-09-22T08:45:03.000Z","comments":true,"path":"api/articles/80-element-plus.json","keywords":null,"cover":null,"text":"element-plus 版本升级由@1.1.0-beta.15 升级到@2.0.4 版本时，在开发时遇到的问题整理及解决方法 一、错误： Can&#39;t ...","permalink":"/post/80-element-plus","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"vue3","slug":"vue3","count":24,"path":"api/tags/vue3.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"78、js-cheat-sheet","uid":"fb572294811aa4bb72308e5444a32de5","slug":"78-js-cheat","date":"2022-07-30T13:00:00.000Z","updated":"2022-09-19T04:48:39.000Z","comments":true,"path":"api/articles/78-js-cheat.json","keywords":null,"cover":[],"text":"上传到图床上的4张图:JavaScript-Cheet-Sheet 1、图1 -document&#x2F;element&#x2F;node&#x2F;att...","permalink":"/post/78-js-cheat","photos":[],"count_time":{"symbolsCount":469,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"js","slug":"js","count":11,"path":"api/tags/js.json"}],"author":{"name":"Jude","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}